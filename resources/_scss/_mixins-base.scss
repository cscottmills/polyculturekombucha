// Base mixins
// -----------

// Media queries
// --------------------------------------------------------
// Respond to viewport size
// $size -> viewport size
// $operator -> 'min' or 'max'
// $aspect -> 'width' or 'height'
// --------------------------
@mixin respond($size, $operator: max, $aspect: width) {
	@media all and (#{$operator}-#{$aspect}: $size) {
		@content;
	}
}

// Utilities
// --------------------------------------------------------
// Full bleed
// $direction accepts 'up', 'down' or 'none';
// NB using 'up' or 'down' causes the shadow to 
// extend to the top or bottom of the viewport
// Only use 'none' on relatively wide elements,
// and set $width to the width of the element 
// --------------------------
@mixin full-bleed($color, $direction: none, $width: 400em) {
	@if $direction == none {
		box-shadow: -$width 0 0 0 $color, $width 0 0 0 $color, (-$width * 2) 0 0 0 $color, ($width * 2) 0 0 0 $color;
	}
	@if $direction == down {
		box-shadow: 0 $width 0 $width $color;
	} 
	@if $direction == up {
		box-shadow: 0 (-$width) 0 $width $color;
	}
	background-color: $color;
}

// Grid item
// --------------------------
@mixin grid-item($count, $space, $wrap: false) {
  $count-1: ($count - 1);
  width: calc((100% / #{$count}) - (#{$space} / #{$count}) * #{$count-1});
  @if $wrap != false {
    &:nth-child(#{$count}n+1):nth-last-child(-n+#{$count-1}) ~ & {
      margin-left: $space;
    }
    @for $i from 1 through ($count - 2) {
      $index: ($count - $i);
      &:nth-child(#{$count}n+#{$index}):last-child {
        margin-right: auto;
      }
    }    
  }
}

// Clearfix
// $mode accepts 'light' or 'heavy'
// 'light' is sufficient for clearing floats, while 'heavy' is required to prevent margin collapsing
// --------------------------
@mixin clearfix($mode: light) {
	@if $mode == heavy {
		&:before,
		&:after {
			content: " ";
			display: table;
		}
		&:after {
			clear: both;
		}
	}
	@else {
		&:after {
			content: " ";
			display: block;
			clear: both;
		}
	}
}

.clearfix {
	@include clearfix;
}

// Components
// --------------------------------------------------------
// Tripundra
// ------
// ------
// ------
// --------------------------
@mixin tripundra($color, $weight, $width, $height) {
  // Reset default <button> styles
  background: transparent;
  border: none;
  padding: 0;
  // Apply the sacred ash
  display: block;
  width: $width;
  height: $height;
  border-top: $weight solid $color;
  border-bottom: $weight solid $color;
  position: relative;
  &:before {
    content: "";
    display: block;
    width: 100%;
    border-top: $weight solid $color;
    position: absolute;
    top: (($height - ($weight * 2)) / 2 ) - ($weight / 2);
    left: 0;
  }
}

// Properties that require browser prefixes
// --------------------------------------------------------
// User selection
// Prevents user from accidentally selecting text on click, helpful for labels
// --------------------------
@mixin no-select {
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;	
}

// Selection background
// --------------------------
@mixin selection($color) {
	::-moz-selection {
		text-shadow: none;
		background: $color;
	}
	::selection {
		text-shadow: none;
		background: $color;
	}
}

// Placeholder text
// --------------------------
@mixin placeholder($color, $style: normal) {
	@extend %thin-glyphs;
	&::-webkit-input-placeholder {
		color: $color;
		font-style: $style;
		@content;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	&:-moz-placeholder {
		color: $color;
		font-style: $style;
		@content;
		opacity: 1;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	&::-moz-placeholder {
		color: $color;
		font-style: $style;
		@content;
		opacity: 1;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	&:-ms-input-placeholder {  
		color: $color;
		font-style: $style;
		@content;
	}
}
